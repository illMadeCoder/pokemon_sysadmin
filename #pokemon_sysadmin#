#!/bin/bash

# arg $1 : string
# function str_pop() {
#      ${
# }

input_buffer=""
input_buffer_max_length=10
input=""
function input_update() {
    while true
    do
	read -rsN1 input
	input_buffer_length=${#input_buffer}
	case $input in
	    $'\177') # backspace
		if [[ $input_buffer_length -gt 0 ]]
		then
		    input_buffer_length_minus_one=$(($input_buffer_length-1))
	            input_buffer=${input_buffer:0:$input_buffer_length_minus_one}
		fi
		echo -ne '\b'
		echo -ne ' '
		;;
	    $'\n') # enter		
		break
		;;
	    $' ') # space
		echo -ne ' '
		;;
	    *)
		input_buffer+=$input
		;;	
	esac
	input_buffer_length=${#input_buffer}
	echo -ne '\r'
	echo -ne $input_buffer
    done
}

function prompt() {
    # echo "Pokemon *Nix V0.21"
    # echo "------------------"
    # echo "Displaying the Present Working Directory /$(basename $(pwd))"
    # tree -C
    # echo "------------------"
    # echo "Enter a command or help:"
    # #read -p "/$(basename $(pwd))$ " input
    input_update
    echo -ne '\n'
#    echo "/$(basename $(pwd))? $input_buffer"
#    echo -ne $input_buffer
    echo "/$(basename $(pwd))? $input_buffer"
    echo "------------------"
    $input_buffer
    # todo: when output is empty move on without press enter
    echo "------------------"
    read -sp "press enter to continue..." input
    clear
    input_buffer=""
    input=""
}

# todo: press up/down for command history
# todo: tab for auto complete

clear
echo "welcome to pokemon_sysadmin"

root_path="$(dirname "$0")"
game_path="$root_path/game"
game_scripts_path="$root_path/scripts/game_scripts"
init_day_path="$game_scripts_path/init_day.sh"
init_game_path="$game_scripts_path/init_game.sh"

$init_game_path

if [[ $# -gt 0 ]]
then   
    day=$1
else
    read -p "day: " day
fi

$init_day_path $day

cd $game_path

clear
while true
do
    prompt
    #clear
done
